// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enum to represent various permission abilities in the system.
// This ensures a consistent and predefined set of permission types
// that can be assigned to roles or entities in a role-based access control (RBAC) system.
enum PermissionAbility {
  // Grants the ability to read/view resources.
  // Example: Reading data from a database or viewing a file.
  READ

  // Grants the ability to update/modify existing resources.
  UPDATE

  // Grants the ability to delete/remove resources.
  DELETE

  // Grants the ability to create new entities/resources.
  CREATE

  // Grants the ability to execute an action or process.
  EXECUTE
}

model Permission {
  id          String   @id @db.Uuid
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Account {
  id             String           @id @db.Uuid
  username       String           @unique
  password       String           @db.VarChar(256)
  createdAt      DateTime         @db.Timestamptz()
  updatedAt      DateTime         @db.Timestamptz()
  createdBy      String
  updatedBy      String?
  ProjectAccount ProjectAccount[]

  @@map("accounts")
}

model Project {
  id          String        @id @db.Uuid
  title       String
  createdAt   DateTime      @db.Timestamptz()
  updatedAt   DateTime      @db.Timestamptz()
  ProjectRole ProjectRole[]

  @@map("projects")
}

model ProjectRole {
  id             String           @id @db.Uuid
  project        Project          @relation(fields: [projectId], references: [id])
  projectId      String           @db.Uuid
  title          String           @db.VarChar(32)
  ProjectAccount ProjectAccount[]

  @@map("project_roles")
}

model ProjectAccount {
  id            String      @id @db.Uuid
  projectRole   ProjectRole @relation(fields: [projectRoleId], references: [id])
  account       Account     @relation(fields: [accountId], references: [id])
  projectRoleId String      @db.Uuid
  accountId     String      @db.Uuid
  createdAt     DateTime    @db.Timestamptz()
  updatedAt     DateTime    @db.Timestamptz()
  createdBy     String
  updatedBy     String?

  @@unique([accountId, projectRoleId])
  @@map("project_accounts")
}

model CallRecord {
  id                String   @id @db.Uuid
  sourceMsisdn      String // Source phone number (MSISDN)
  sourceImsi        String?
  sourceImei        String?
  destinationMsisdn String // Destination phone number (MSISDN)
  destinationImsi   String?
  destinationImei   String?
  callDuration      Int // Call duration in minutes
  locationLat       Float // Latitude of the call's location
  locationLng       Float // Longitude of the call's location
  address           String // Address associated with the location
  callStartTime     DateTime // Timestamp of when the call started
  callEndTime       DateTime // Timestamp of when the call ended
  createdAt         DateTime @default(now()) // Record creation time
  updatedAt         DateTime @updatedAt // Record update time
}
